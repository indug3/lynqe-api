name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'  
  pull_request:
    branches:
      - '**'  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Set Environment Variables
        run: echo "NODE_ENV=production" >> $GITHUB_ENV

      - name: Build the Project
        run: |
          cd src/server  # Update this path
          npm run build

      - name: Debug Build Output
        run: ls -la src/server/dist  # Update this path

      - name: Package the Application
        run: tar -czf backend-build.tar.gz -C src/server ./dist  # Update this path

      - name: Upload Package as an Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: backend-build.tar.gz




  deploy:
    needs: build  # Ensures deploy runs only if build is successful
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install --production

      - name: Deploy Application
        run: |
          echo "Deploying application..."
          # Add actual deployment commands here, e.g.:
          # scp -r ./* user@your-server:/var/www/project
          # ssh user@your-server 'pm2 restart your-app'
